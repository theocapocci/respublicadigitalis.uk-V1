---
// src/pages/library.astro
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import path from 'node:path';

// 1. Fetch all literature notes
const allLiterature = await getCollection('literature');

// 2. Filter for published notes and sort by date (newest first)
const publishedLiterature = allLiterature
  .filter(note => note.data.publish === true)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
---
<BaseLayout frontmatter={{ title: 'Library | Respublica Digitalis' }}>
  <div class="main-content-container">
    <section class="base-content">
      <h1>Library</h1>
      <p>A collection of books and papers I have read, organized in chronological order.</p>
    </section>

    <div class="gallery-grid">
      {publishedLiterature.map(note => (
        <a href={`/literature/${note.slug}`} class="gallery-item">
          {note.data.image && (
            <img 
              src={`/assets/images/${path.basename(note.data.image)}`} 
              alt={`Cover for ${note.data.title}`} 
              class="card-image" 
            />
          )}
        </a>
      ))}
    </div>
  </div>
</BaseLayout>

<style>
  /* --- PAGE-SPECIFIC LAYOUT AND CONTENT STYLES --- */
  .main-content-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .base-content {
    padding: 20px 0;
    text-align: left;
    max-width: 1100px;
    margin: 0 auto;
  }

  .base-content h1 {
    font-family: 'Cormorant SC', serif;
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }
 
  .base-content p {
    font-family: 'Sorts Mill Goudy', serif;
    font-size: 1.3em;
    line-height: 1.8;
    margin: 20px 0 30px 0;
  }

/* --- GALLERY STYLES --- */
.gallery-grid {
  max-width: 1100px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  gap: 2rem;
  margin: 0 auto;
}

/* New method for a robust aspect ratio */
.gallery-item {
  display: block;
  text-decoration: none;

  /* 1. Set as positioning context for the image inside */
  position: relative; 
  
  /* 2. Collapse the element's height... */
  height: 0;
  
  /* 3. ...and use padding to create a height based on the width. */
  /* For a 2:3 ratio, height is 150% of the width (3 / 2 = 1.5) */
  padding-top: 150%; 
  
  border-radius: 4px;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0,0,0,0.05);
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.gallery-item:hover {
  transform: translateY(-5px) scale(1.03);
  box-shadow: 0 8px 24px rgba(0,0,0,0.1);
}

.card-image {
  /* 4. Position the image to fill the container perfectly */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}
</style>